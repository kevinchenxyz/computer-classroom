{"version":3,"file":"background.js","sources":["src/helpers/window.js","src/env.js","src/background.js"],"sourcesContent":["// This helper remembers the size and position of your windows (and restores\n// them in that place after app relaunch).\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from 'electron';\nimport jetpack from 'fs-jetpack';\n\nexport default (name, options) => {\n  const userDataDir = jetpack.cwd(app.getPath('userData'));\n  const stateStoreFile = `window-state-${name}.json`;\n  const defaultSize = {\n    width: options.width,\n    height: options.height,\n  };\n  let state = {};\n  let win;\n\n  const restore = () => {\n    let restoredState = {};\n    try {\n      restoredState = userDataDir.read(stateStoreFile, 'json');\n    } catch (err) {\n      // For some reason json can't be read (might be corrupted).\n      // No worries, we have defaults.\n    }\n    return Object.assign({}, defaultSize, restoredState);\n  };\n\n  const getCurrentPosition = () => {\n    const position = win.getPosition();\n    const size = win.getSize();\n    return {\n      x: position[0],\n      y: position[1],\n      width: size[0],\n      height: size[1],\n    };\n  };\n\n  const windowWithinBounds = (windowState, bounds) => {\n    return windowState.x >= bounds.x\n      && windowState.y >= bounds.y\n      && windowState.x + windowState.width <= bounds.x + bounds.width\n      && windowState.y + windowState.height <= bounds.y + bounds.height;\n  };\n\n  const resetToDefaults = () => {\n    const bounds = screen.getPrimaryDisplay().bounds;\n    return Object.assign({}, defaultSize, {\n      x: (bounds.width - defaultSize.width) / 2,\n      y: (bounds.height - defaultSize.height) / 2,\n    });\n  };\n\n  const ensureVisibleOnSomeDisplay = (windowState) => {\n    const visible = screen.getAllDisplays().some((display) => {\n      return windowWithinBounds(windowState, display.bounds);\n    });\n    if (!visible) {\n      // Window is partially or fully not visible now.\n      // Reset it to safe defaults.\n      return resetToDefaults();\n    }\n    return windowState;\n  };\n\n  const saveState = () => {\n    if (!win.isMinimized() && !win.isMaximized()) {\n      Object.assign(state, getCurrentPosition());\n    }\n    userDataDir.write(stateStoreFile, state, { atomic: true });\n  };\n\n  state = ensureVisibleOnSomeDisplay(restore());\n\n  win = new BrowserWindow(Object.assign({}, options, state));\n\n  win.on('close', saveState);\n\n  return win;\n};\n","// Simple wrapper exposing environment variables to rest of the code.\n\nimport jetpack from 'fs-jetpack';\n\n// The variables have been written to `env.json` by the build process.\nconst env = jetpack.cwd(__dirname).read('env.json', 'json');\n\nexport default env;\n","\nimport path from 'path';\nimport url from 'url';\nimport { app, Menu , Tray, BrowserWindow, ipcMain, dialog} from 'electron';\nimport { devMenuTemplate } from './menu/dev_menu_template';\nimport { editMenuTemplate } from './menu/edit_menu_template';\nimport { aboutMenuTemplate } from './menu/about_menu_template.js';\nimport createWindow from './helpers/window';\n// import zmq from 'zmq';\n\nimport env from './env';\n\nconst {exec} = require('child_process');\n\nconst setApplicationMenu = () => {\n  const menus = [aboutMenuTemplate];\n  if (env.name !== 'production') {\n    menus.push(devMenuTemplate);\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n};\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== 'production') {\n  const userDataPath = app.getPath('userData');\n  app.setPath('userData', `${userDataPath} (${env.name})`);\n}\n\n\nlet appIcon = null;\n// import my_image from '../build/icon.ico'; //relative path to image\n// const image = require('./build/icon.ico')\n// const image = clipboard.readImage();\n// let win = new BrowserWindow({icon: 'icon.ico'})\n\n// autoUpdater.on('update-downloaded', (ev, info) => {\n//   // sendStatusToWindow('Update downloaded; will install in 5 seconds');\n//   setTimeout(function() {\n//     autoUpdater.quitAndInstall();\n//   }, 5000)\n// });\n\napp.on('ready', () => {\n\n  //開機執行工作排程\n  var AutoLaunch = require('auto-launch');\n \n  var minecraftAutoLauncher = new AutoLaunch({\n      name: 'computer_classroom',\n      // path: process.execPath,\n  });\n  \n  minecraftAutoLauncher.enable();\n  //minecraftAutoLauncher.disable();\n  \n  minecraftAutoLauncher.isEnabled()\n  .then(function(isEnabled){\n      if(isEnabled){\n          return;\n      }\n      minecraftAutoLauncher.enable();\n  })\n  .catch(function(err){\n      // handle error\n  });\n  // const fs = require('fs');\n  // if(!fs.existsSync('C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\\\\computer_classroom.lnk')){\n  //   //將捷徑放入工作排程\n  //   exec('cd %UserProfile% && cd ../Public && copy /Y Desktop\\\\computer_classroom.lnk \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\"', function(error, stdout, stderr){\n  //   });\n  // }\n  // }\n  //快捷見註冊\n  // const dialog = require('electron').dialog;\n  // const globalShortcut = require('electron').globalShortcut;\n  // globalShortcut.register('CommandOrControl+Shift+Esc', function () {\n  //   dialog.showMessageBox({\n  //     type: 'info',\n  //     message: '成功!',\n  //     detail: '你按下了一个全局注册的快捷键绑定.',\n  //     buttons: ['好的']\n  //   });\n  // });\n\n  // autoUpdater.checkForUpdates();\n  // setApplicationMenu();\n  // runSetStartUp();\n  //set taskbar\n  const nativeImage = require('electron').nativeImage;\n  var imageIcon = nativeImage.createFromPath(__dirname + \"/images/icon.ico\");\n  appIcon = new Tray(imageIcon)\n  appIcon.setToolTip('電腦教室管理, V0.0.2');//右下方icon顯示版號\n\n  let win = new BrowserWindow({\n    width: 350, \n    height: 200, \n    frame: true,\n    x:0,\n    y:0,\n    title: '電腦教室借用管理',\n    autoHideMenuBar: true,\n    closable: false, //視窗不可手動關閉(按X沒動作)\n  });\n\n  win.loadURL(url.format({\n    pathname: path.join(__dirname, 'app.html'),\n    protocol: 'file:',\n    slashes: true,\n  }));\n  // win.openDevTools();\n  win.show();\n  // mainWindow.loadURL(url.format({\n  //   pathname: path.join(__dirname, 'app.html'),\n  //   protocol: 'file:',\n  //   slashes: true,\n  // }));\n    // mainWindow.openDevTools();\n});\n\napp.on('window-all-closed', () => {\n  // app.quit();\n  var winLockCommand = 'shutdown -L';//登出\n  // var winLockCommand = 'shutdown -r -t 12';//reboot\n  exec(winLockCommand);\n});\n"],"names":["app","Tray","BrowserWindow"],"mappings":";;;;;;;;;AAAA;;;gDAGgD;;ACHhD;;AAEA,AAEA;AACA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;;ACG3D;;AAEA,AAEA,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAExC,AAQA;;;AAGA,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;EAC7B,MAAM,YAAY,GAAGA,YAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC7CA,YAAG,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1D;;;AAGD,IAAI,OAAO,GAAG,IAAI,CAAC;;;;;;;;;;;;;AAanBA,YAAG,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM;;;EAGpB,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;EAExC,IAAI,qBAAqB,GAAG,IAAI,UAAU,CAAC;MACvC,IAAI,EAAE,oBAAoB;;GAE7B,CAAC,CAAC;;EAEH,qBAAqB,CAAC,MAAM,EAAE,CAAC;;;EAG/B,qBAAqB,CAAC,SAAS,EAAE;GAChC,IAAI,CAAC,SAAS,SAAS,CAAC;MACrB,GAAG,SAAS,CAAC;UACT,OAAO;OACV;MACD,qBAAqB,CAAC,MAAM,EAAE,CAAC;GAClC,CAAC;GACD,KAAK,CAAC,SAAS,GAAG,CAAC;;GAEnB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;EAwBH,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC;EACpD,IAAI,SAAS,GAAG,WAAW,CAAC,cAAc,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC;EAC3E,OAAO,GAAG,IAAIC,aAAI,CAAC,SAAS,EAAC;EAC7B,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;;EAErC,IAAI,GAAG,GAAG,IAAIC,sBAAa,CAAC;IAC1B,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,KAAK,EAAE,IAAI;IACX,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IACH,KAAK,EAAE,UAAU;IACjB,eAAe,EAAE,IAAI;IACrB,QAAQ,EAAE,KAAK;GAChB,CAAC,CAAC;;EAEH,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;IACrB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC;IAC1C,QAAQ,EAAE,OAAO;IACjB,OAAO,EAAE,IAAI;GACd,CAAC,CAAC,CAAC;;EAEJ,GAAG,CAAC,IAAI,EAAE,CAAC;;;;;;;CAOZ,CAAC,CAAC;;AAEHF,YAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,MAAM;;EAEhC,IAAI,cAAc,GAAG,aAAa,CAAC;;EAEnC,IAAI,CAAC,cAAc,CAAC,CAAC;CACtB,CAAC,CAAC"}